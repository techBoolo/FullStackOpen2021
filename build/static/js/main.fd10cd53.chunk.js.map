{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","handleImportance","label","important","className","content","onClick","Notification","message","messageType","Footer","style","color","fontSize","fontStyle","baseUrl","noteService","getAll","axios","get","then","response","data","create","newNote","post","update","id","put","App","useState","notes","setNotes","setContent","showAll","setShowAll","setMessage","useEffect","initialNotes","notesToShow","filter","onSubmit","ev","preventDefault","date","Date","toISOString","Math","random","createdNote","setTimeout","value","onChange","target","type","checked","map","find","changedNote","updatedNote","catch","error","handleImportanceOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd10cd53.chunk.js","sourcesContent":["const Note = ({ note, handleImportance }) => {\n  const label = note.important \n    ? 'make not important' \n    : 'make important' \n  return (\n    <>\n      <li className='note'>\n      { note.content }\n      <button onClick={handleImportance}>{label}</button>\n      </li> \n    </>\n  );\n};\n\nexport default Note;\n","const Notification = ({ message }) => {\n  if(!message.message) return null;\n  return (\n    <div className={`message ${message.messageType}`}>\n      { message.message } \n    </div>\n  );\n};\n\nexport default Notification\n","const Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontSize: 16,\n    fontStyle: 'italic',\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of CS, 2021</em>\n    </div>\n  );\n};\nexport default Footer;\n","import axios from 'axios';\nconst baseUrl = '/api/notes';\n//const baseUrl = 'https://calm-badlands-07808.herokuapp.com/'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n    .then(response => {\n      return response.data\n    })\n}\nconst create = (newNote ) => {\n  return axios.post(baseUrl, newNote)\n    .then(response => {\n      return response.data\n    })\n}\nconst update = (id, newNote) => {\n  return axios.put(`${baseUrl}/${id}`, newNote)\n    .then(response => {\n      return response.data\n    })\n}\n\nconst noteService =  {\n  getAll,\n  create,\n  update\n }\n\nexport default noteService;\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport './App.css';\n\nconst  App = () =>  {\n  const [ notes, setNotes ] = useState([]);\n  const [ content, setContent ] = useState('');\n  const [ showAll, setShowAll ] = useState(false);\n  const [ message, setMessage ] = useState({});\n\n  useEffect(() => {\n    noteService \n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (ev) => {\n    ev.preventDefault();\n    const newNote = {\n      content,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n    noteService\n      .create(newNote)\n      .then(createdNote => {\n        setNotes([...notes, createdNote]);\n        setMessage({ message: 'New Note created!', messageType: 'success'})\n        setTimeout(() => setMessage({}), 5000)\n        setContent('');\n      })\n  }\n\n  const handleContentChange = (ev) => {\n    setContent(ev.target.value);\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n    const handleImportanceOf = (id) => {\n      const note = notes.find(note => note.id === id);\n      const changedNote = {...note, important: !note.important }\n      noteService\n        .update(id, changedNote)\n        .then(updatedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n        })\n        .catch(error => {\n          setMessage({ message: `Note was already removed`, messageType: 'error'})\n          setTimeout(() => setMessage({}), 5000)\n          setNotes(notes.filter(note => note.id !== id)) \n        });\n    }\n\n  return (\n      <div className='App'>\n        <Notification message={message} />\n        <form onSubmit={addNote}>\n          <input value={content} onChange={handleContentChange} />\n          <button type='submit'>add</button>\n        </form>\n        <h4>Notes</h4>\n        <input type='checkbox' onChange={(ev) => setShowAll(ev.target.checked) } /><span>show All</span>\n        <ul>\n          { notesToShow.map(note =>  <Note key={note.id} note={note} handleImportance={() => handleImportanceOf(note.id) } />) }\n        </ul>\n        <Footer />\n      </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}